=begin
#Web3.Storage API

#This documentation describes the HTTP API for [**Web3.Storage**](https://web3.storage), which allows you to quickly and easily build applications using decentralized data storage persisted by [Filecoin](https://filecoin.io) and available over [IPFS](https://ipfs.io).  You can also interact with this API using client libraries. See [**docs.web3.storage**](https://docs.web3.storage) for more information on using a client library, as well as a variety of other guides and how-tos for Web3.Storage as a whole.  ## API endpoint URL  The main public API endpoint URL for Web3.Storage is `https://api.web3.storage`. All endpoints described in this document should be made relative to this root URL. For example, to post to the `/car` endpoint, send your request to `https://api.web3.storage/car`.  ### Rate limits  This API imposes rate limits to ensure quality of service. You may receive a 429 \"Too many requests\" error if you make more than 30 requests with the same API token within a ten second window. Upon receiving a response with a 429 status, clients should retry the failed request after a small delay. To avoid 429 responses, you may wish to implement client-side request throttling to stay within the limits. 

The version of the OpenAPI document: 1.0

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.2.1

=end

# Common files
require 'web3_storage/api_client'
require 'web3_storage/api_error'
require 'web3_storage/version'
require 'web3_storage/configuration'

# Models
require 'web3_storage/models/deal'
require 'web3_storage/models/error_response'
require 'web3_storage/models/failure'
require 'web3_storage/models/failure_error'
require 'web3_storage/models/forbidden_error_response'
require 'web3_storage/models/psa_pin'
require 'web3_storage/models/pin'
require 'web3_storage/models/pin_results'
require 'web3_storage/models/pin_status'
require 'web3_storage/models/pin_status_pin'
require 'web3_storage/models/status'
require 'web3_storage/models/text_matching_strategy'
require 'web3_storage/models/unauthorized_error_response'
require 'web3_storage/models/upload_response'

# APIs
require 'web3_storage/api/web3_storage_httpapi_api'

module Web3Storage
  class << self
    # Customize default settings for the SDK using block.
    #   Web3Storage.configure do |config|
    #     config.username = "xxx"
    #     config.password = "xxx"
    #   end
    # If no block given, return the default Configuration object.
    def configure
      if block_given?
        yield(Configuration.default)
      else
        Configuration.default
      end
    end
  end
end
